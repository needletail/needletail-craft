{% if bucket.elementData %}
    {% set groupId = bucket.elementData[bucket.elementType] %}
    {% set group = craft.app.categories.getGroupById(groupId) %}
{% endif %}

{% set categories = [{ label: 'No default', value: '' }] %}

{% for category in craft.categories.groupId(groupId).all() %}
    {% set categories = categories | merge([{ label: category.title | slice(0, 40), value: category.id }]) %}
{% endfor %}



{% set fields = [{
    name: 'Title',
    handle: 'title',
    default: {
        type: 'text',
    },
}, {
    name: 'Slug',
    handle: 'slug',
    instructions: 'If not set, the Slug will be automatically created from Title.' | t('feed-me'),
    default: {
        type: 'text',
    },
}, {
    type: 'categories',
    name: 'Parent',
    handle: 'parent',
    instructions: 'Select a parent category to import these categories under.' | t('feed-me'),
    default: {
        type: 'select',
        options: categories,
    }
}] %}


<h2>{{ 'Category Fields' | t('needletail') }}</h2>


<table class="needletail-mapping data fullwidth collapsible">
    <thead>
    <th style="width: 45%">{{ 'Field' | t('needletail') }}</th>
    <th>{{ 'Enabled' | t('needletail') }}</th>
    <th style="width: 45%">{{ 'Default Value' | t('needletail') }}</th>
    </thead>
    <tbody>
    {% for field in fields %}
        {% set template = field.type ?? 'default' %}
        {% set variables = field | merge({ bucket: bucket, attribute: true }) %}
        {% include 'needletail/_includes/fields/default' with variables only %}
    {% endfor %}
    </tbody>
</table>


{% set tabs = [] %}

{% if group.fieldLayoutId %}
    {% set tabs = craft.app.fields.getLayoutById(group.fieldLayoutId).getTabs() %}

    {% for tab in tabs %}
        <hr>

        <h2>{{ tab.name }} Fields</h2>

        <table class="needletail-mapping data fullwidth collapsible">
            <thead>
            <th style="width: 45%">{{ 'Field' | t('needletail') }}</th>
            <th>{{ 'Enabled' | t('needletail') }}</th>
            <th style="width: 45%">{{ 'Default Value' | t('needletail') }}</th>
            </thead>
            <tbody>
            {% for layoutField in tab.getElements()|filter(e => e is instance of('craft\\fieldlayoutelements\\CustomField')) %}
                {% set field = layoutField.getField() %}
                {% set fieldClass = craft.needletail.fields.getRegisteredField(className(field)) %}
                {% set template = fieldClass.getMappingTemplate() %}

                {% set variables = { name: field.name, handle: field.handle, bucket: bucket, field: field, fieldClass: fieldClass } %}

                {% include template ignore missing with variables only %}
            {% endfor %}
            </tbody>
        </table>
    {% endfor %}
{% endif %}
